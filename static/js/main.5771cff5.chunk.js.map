{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","canvasRef","useRef","useState","product","setProduct","logo","setLogo","x","y","w","h","boxe","setBoxe","justloaded","setJustLoaded","productLimit","ctx","isDown","dragTarget","startX","startY","useEffect","image","Image","src","onload","draw","current","getContext","clearRect","clientWidth","clientHeight","fillStyle","fillRect","drawImage","width","height","console","log","hitBox","isTarget","handleMouseUp","e","onMouseDown","parseInt","nativeEvent","offsetX","clientLeft","offsetY","clientTop","onMouseMove","mouseX","mouseY","dx","dy","onMouseUp","onMouseOut","onWheel","deltaY","ref","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5771cff5.chunk.js","sourcesContent":["import React, { useEffect, useRef ,useState} from 'react';\nimport './App.css';\n\n\n\nfunction App() {\n  const canvasRef = useRef(null)\n  const [product, setProduct] = useState(null)\n  const [logo, setLogo] = useState(null)\n  let [boxe, setBoxe] = useState({x:0, y:0, w:0, h:0})\n  const [justloaded, setJustLoaded] = useState(true)\n\n  const productLimit = {x: 125, y: 45, w: 250, h: 450}\n  let ctx = null\n  let isDown = false;\n  let dragTarget = null;\n  let startX = null;\n  let startY = null;\n\n  useEffect(() => {\n    const image = new Image();\n\n    image.src = '/Tshirt.png';\n    image.onload = () => setProduct(image)\n  \n  }, [])\n\n  useEffect(() =>{\n    draw()\n  }, )\n\n  const draw = () => {\n    if(product && canvasRef){\n      ctx = canvasRef.current.getContext(\"2d\")\n      ctx.clearRect(0, 0, canvasRef.current.clientWidth, canvasRef.current.clientHeight);\n      ctx.fillStyle = \"blue\"\n      ctx.fillRect(0, 0, 500, 500)\n      ctx.drawImage(product, 5, 0, product.width/3, product.height/3)\n      if(logo && boxe){\n        if (justloaded){\n          setBoxe({x: productLimit.x + 5, y: productLimit.y + 5, w:logo.width/5, h:logo.height/5})\n          setJustLoaded(false)\n        }\n        console.log(boxe)\n        ctx.drawImage(logo, boxe.x, boxe.y, boxe.w, boxe.h)\n      }\n    }\n  }\n\n  const hitBox = (x, y) => {\n    let isTarget = null;\n    if (x >= boxe.x && x <= boxe.x + boxe.w && y >= boxe.y && y <= boxe.y + boxe.h) {\n      dragTarget = boxe;\n      isTarget = true;\n    }\n    return isTarget;\n  }\n\n  const handleMouseDown = e => {\n    startX = parseInt(e.nativeEvent.offsetX - canvasRef.current.clientLeft);\n    startY = parseInt(e.nativeEvent.offsetY - canvasRef.current.clientTop);\n    isDown = hitBox(startX, startY);\n  }\n  const handleMouseMove = e => {\n    if (!isDown) return;\n\n    const mouseX = parseInt(e.nativeEvent.offsetX - canvasRef.current.clientLeft);\n    const mouseY = parseInt(e.nativeEvent.offsetY - canvasRef.current.clientTop);\n    let dx = mouseX - startX;\n    let dy = mouseY - startY;\n    startX = mouseX;\n    startY = mouseY;\n    if (!hitBox(startX, startY))\n      return;\n    console.log('dx:', dx, 'dy:', dy)\n\n    if(productLimit.x > boxe.x )\n      dx += productLimit.x - boxe.x\n    if(productLimit.x + productLimit.w < boxe.x + boxe.w)\n      dx += productLimit.x + productLimit.w - (boxe.x + boxe.w)\n    if(productLimit.y > boxe.y )\n      dy += productLimit.y - boxe.y\n    if(productLimit.y + productLimit.h < boxe.y + boxe.h)\n      dy += productLimit.y + productLimit.h - (boxe.y + boxe.h)\n    dragTarget.x += dx;\n    dragTarget.y += dy;\n    draw();\n  }\n  const handleMouseUp = e => {\n    dragTarget = null;\n    isDown = false;\n  }\n  const handleMouseOut = e => {\n    handleMouseUp(e);\n  }\n  const handleMouseScroll = (e) => {\n    if(e.deltaY > 0)\n    {\n      if((productLimit.x > boxe.x ) || (productLimit.x + productLimit.w < boxe.x + boxe.w))\n        return;\n      if((productLimit.y > boxe.y ) || (productLimit.y + productLimit.h < boxe.y + boxe.h))\n        return;\n      console.log('out')\n      setBoxe({x: boxe.x -3, y: boxe.y -3, w: boxe.w + 6, h: boxe.h + 6})\n    }\n    else if (boxe.w > 20 && boxe.h > 20)\n    {\n      console.log('in')\n      setBoxe({x: boxe.x + 3, y: boxe.y + 3, w: boxe.w - 6, h: boxe.h - 6})\n    }\n    draw();\n  }\n\n  const buttonHandler = () => {\n    const image = new Image()\n    image.src = '/logo.png'\n    image.onload = () =>{\n      setLogo(image);\n    }\n  }\n\n  return (\n    <div>\n      <h1>Hello</h1>\n      <canvas\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseOut={handleMouseOut}\n        onWheel={handleMouseScroll}\n        ref={canvasRef}\n        width = {500}\n        height = {500}\n      />\n      <button  onClick={buttonHandler}>LOGO 1 </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}